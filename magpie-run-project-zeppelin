#!/bin/bash
#############################################################################
#  Copyright (C) 2013-2015 Lawrence Livermore National Security, LLC.
#  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#  Written by Albert Chu <chu11@llnl.gov>
#  LLNL-CODE-644248
#  
#  This file is part of Magpie, scripts for running Hadoop on
#  traditional HPC systems.  For details, see https://github.com/llnl/magpie.
#  
#  Magpie is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  Magpie is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Magpie.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# This script is the core processing script for setting up daemons and
# running jobs.  For the most part, it shouldn't be editted.  See
# job submission files for configuration details.

source ${MAGPIE_SCRIPTS_HOME}/magpie-submission-convert
source ${MAGPIE_SCRIPTS_HOME}/magpie-common-exports
source ${MAGPIE_SCRIPTS_HOME}/magpie-common-functions
source ${MAGPIE_SCRIPTS_HOME}/magpie-run-common-functions
source ${MAGPIE_SCRIPTS_HOME}/magpie-lib-misc-external
source ${MAGPIE_SCRIPTS_HOME}/magpie-variable-conversion
source ${MAGPIE_SCRIPTS_HOME}/magpie-generated-exports

Magpie_run_start_zeppelin () {
    if [ "${ZEPPELIN_SETUP}" == "yes" ] && [ "${prior_setup_successful}" == "true" ]
    then
	cd ${ZEPPELIN_HOME}

	if [ ${ZEPPELIN_MODE} != "setuponly" ]
	then
	    echo "Starting Zeppelin"
            ${ZEPPELIN_HOME}/bin/zeppelin-daemon.sh --config ${ZEPPELIN_CONF_DIR} start

            # My rough estimate for setup time is 30 seconds
            local sleepwait=30

	    echo "Waiting ${sleepwait} seconds to allow Zeppelin daemons to setup"
	    sleep ${sleepwait}
	    totalsleepwait=`expr ${totalsleepwait} + ${sleepwait}`
	fi

	echo "*******************************************************"
	echo "*"
	echo "* Zeppelin Information"
	echo "*"
	echo "* To access Zeppelin's web interface, you'll want to navigate your browser to:"
	echo "*     http://${ZEPPELIN_MASTER_NODE}:${ZEPPELIN_PORT}"
	echo "*"
	echo "* To access zeppelin directly, you'll want to:"
	echo "*   ${MAGPIE_REMOTE_CMD:-ssh}${MAGPIE_REMOTE_CMD_OPTS:+" "}${MAGPIE_REMOTE_CMD_OPTS} ${ZEPPELIN_MASTER_NODE}"
	if echo $MAGPIE_SHELL | grep -q csh
	then
	    echo "*   setenv ZEPPELIN_CONF_DIR \"${ZEPPELIN_CONF_DIR}\""
	else
	    echo "*   export ZEPPELIN_CONF_DIR=\"${ZEPPELIN_CONF_DIR}\""
	fi
	echo "*   cd $ZEPPELIN_HOME"
	echo "*"
	echo "* Then you can do as you please. To interact with Zeppelin you can use the applications available in:"
	echo "*"
	echo "*   ${ZEPPELIN_HOME}/${zeppelincmdprefix}"

	echo "*"
	echo "* Some additional environment variables you may sometimes wish to set"
	echo "*"
	if echo $MAGPIE_SHELL | grep -q csh
	then
	    echo "*   setenv JAVA_HOME \"${JAVA_HOME}\""
            echo "*   setenv ZEPPELIN_HOME \"${ZEPPELIN_HOME}\""
	else
	    echo "*   export JAVA_HOME=\"${JAVA_HOME}\""
            echo "*   export ZEPPELIN_HOME=\"${ZEPPELIN_HOME}\""
	fi

	if [ "${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}X" != "X" ]
	then
	    echo "*"
	    echo "* If running interactively, sourcing"
	    echo "*"
	    echo "* ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}"
	    echo "*"
	    echo "* will set most common environment variables for your job."
	fi
	echo "*"
	echo "*******************************************************"

	if [ "${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}X" != "X" ]
	then
	    if echo $MAGPIE_SHELL | grep -q csh
	    then
		echo "setenv ZEPPELIN_HOME \"${ZEPPELIN_HOME}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
	    else
		echo "export ZEPPELIN_HOME=\"${ZEPPELIN_HOME}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
	    fi
	    echo "" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
	fi

	if [ ${ZEPPELIN_MODE} != "setuponly" ]
	then
	    local magpiestartuptimeseconds=`expr ${MAGPIE_STARTUP_TIME} \* 60`

	    if [ "${totalsleepwait}" -lt "${magpiestartuptimeseconds}" ]
	    then 
	        # Could be more dynamic w/ slurm call to determine current
	        # run time, but probably is sufficient for this trivial
	        # part.  Minimally, have to leave the totalsleepwait code
	        # around for non-slurm systems.
		local zeppelinmaxwaitseconds=`expr ${magpiestartuptimeseconds} - ${totalsleepwait}`

		if [ "${zeppelinmaxwaitseconds}" -lt 30 ]
		then
		    zeppelinmaxwaitseconds=30
		fi
		
		local zeppelinmaxwaittimes=`expr ${zeppelinmaxwaitseconds} \/ 30`
	    else
		local zeppelinrmaxwaittimes=1
	    fi

	    cd ${ZEPPELIN_HOME}

	    local zeppelincameup=0

	    for ((i = 1; i <= ${zeppelinmaxwaittimes}; i++)); do

		local serverschk=0
		local serversup=0
		for server in `cat ${ZEPPELIN_CONF_DIR}/masters`;
		do
                    serverschk=$((serverschk+1))
                    if [ $(${MAGPIE_REMOTE_CMD:-ssh} ${MAGPIE_REMOTE_CMD_OPTS} $server ps -ef | grep -c zeppelin) -gt "0" ] ;
                    then
			serversup=$((serversup+1))
                    fi
		done

		echo "$serversup/$serverschk Zeppelin Servers are up."
		if [ "$serverschk" -eq "$serversup" ]
		then
                    zeppelincameup=1
                    break
		fi

		echo "Waiting 30 more seconds for Zeppelin Servers to come up"
		sleep 30
		totalsleepwait=`expr ${totalsleepwait} + 30`
	    done

	    if [ "${zeppelincameup}" == "0" ]
	    then
		echo "Not all Zeppelin Servers came up, setup problem or maybe need to increase MAGPIE_STARTUP_TIME"
		zeppelin_should_be_torndown=1
		zeppelin_setup_successful=0
		prior_setup_successful=false
	    else
		zeppelin_should_be_torndown=1
		zeppelin_setup_successful=1
	    fi
	else
	    zeppelin_should_be_torndown=1
	    zeppelin_setup_successful=1
	fi
    else
	zeppelin_should_be_torndown=0
	zeppelin_setup_successful=1
    fi
}

Magpie_run_stop_zeppelin () {
    if [ "${ZEPPELIN_SETUP}" == "yes" ] && [ "${zeppelin_should_be_torndown}" == "1" ]
    then
	if [ ${ZEPPELIN_MODE} != "setuponly" ]
	then
	    cd ${ZEPPELIN_HOME}
	    
	    echo "Stopping Zeppelin"
            ${ZEPPELIN_HOME}/bin/zeppelin-daemon.sh stop
	fi
    fi
    zeppelin_teardown_complete=1
}
