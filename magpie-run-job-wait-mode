#!/bin/bash
#############################################################################
#  Copyright (C) 2013-2015 Lawrence Livermore National Security, LLC.
#  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#  Written by Albert Chu <chu11@llnl.gov>
#  LLNL-CODE-644248
#  
#  This file is part of Magpie, scripts for running Hadoop on
#  traditional HPC systems.  For details, see https://github.com/llnl/magpie.
#  
#  Magpie is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  Magpie is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Magpie.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# This script is for managing scripts that are run.  For the most
# part, it shouldn't be editted.  See job submission files for
# configuration details.

source ${MAGPIE_SCRIPTS_HOME}/magpie-common-exports
source ${MAGPIE_SCRIPTS_HOME}/magpie-common-functions
source ${MAGPIE_SCRIPTS_HOME}/magpie-variable-conversion

# For this run, we will use cluster specific paths
Magpie_make_all_local_dirs_node_specific

if [ "$1X" == "X" ]
then
    echo "Internal error - magpie-job-wait-mode, first argument unset"
    exit 1
fi

if [ "$1" != "interactive" ] && [ "$1" != "launch" ] && [ "$1" != "server" ] && [ "$1" != "script" ]
then
    echo "Internal error - magpie-job-wait-mode, first argument invalid = $1"
    exit 1
fi

jobwaittype=$1

if [ "${jobwaittype}" == "script" ]
then
    if [ "$2X" == "X" ]
    then
	echo "Internal error - magpie-job-wait-mode, second argument unset"
	exit 1
    fi
    scripttorun=$2
fi


mypid=$$

if [ "${jobwaittype}" == "interactive" ]
then
    ${MAGPIE_SCRIPTS_HOME}/magpie-run-sleep countdown &
    childpid=$!
    typemessage="'${jobwaittype}' mode"
elif [ "${jobwaittype}" == "launch" ] || [ "${jobwaittype}" == "server" ]
then
    ${MAGPIE_SCRIPTS_HOME}/magpie-run-sleep normal &
    childpid=$!
    typemessage="'${jobwaittype}' mode"
else
    ${scripttorun} &
    childpid=$!
    typemessage="job"
fi

# Some systems have SIGUSR1 as USR1 so we hardcode the value of 10

echo "*******************************************************"
echo "* Run '${MAGPIE_REMOTE_CMD:-ssh}${MAGPIE_REMOTE_CMD_OPTS:+" "}${MAGPIE_REMOTE_CMD_OPTS} $(hostname) kill -s 10 ${mypid}' to exit ${typemessage} early."
if [ "${jobwaittype}" == "script" ]
then
    echo "*"
    echo "* Warning: killing early may not kill jobs submitted to an internally"
    echo "* managed scheduler within Magpie.  The job will be canceled during teardown"
    echo "* of daemons.  Extraneous error messages from your job may occur until then."
fi
echo "*******************************************************"

trap "echo \"Received interrupt from user, ${typemessage} ending early.\"; kill -s 9 ${childpid}" 10

# Some systems have SIGUSR2 as USR2 so we hardcode the value of 12

# This trap is used exclusively by Magpie to kill the job if it is
# running long

trap "echo \"Kill script due to job time limit being reached.\"; kill -s 9 ${childpid}" 12

wait $childpid

childstatus=$?

if [ "${childstatus}" == "0" ]
then
    echo "*******************************************************"
    echo "* End of ${typemessage}"
    echo "*******************************************************"
fi
