#!/bin/bash
#############################################################################
#  Copyright (C) 2013-2015 Lawrence Livermore National Security, LLC.
#  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#  Written by Albert Chu <chu11@llnl.gov>
#  LLNL-CODE-644248
#  
#  This file is part of Magpie, scripts for running Hadoop on
#  traditional HPC systems.  For details, see https://github.com/llnl/magpie.
#  
#  Magpie is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  Magpie is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Magpie.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# Export environment variables we promised to export in documentation
# and various variables needed.
#
# This is used by scripts, don't edit this

source ${MAGPIE_SCRIPTS_HOME}/magpie-defaults
source ${MAGPIE_SCRIPTS_HOME}/magpie-exports-submission-type
source ${MAGPIE_SCRIPTS_HOME}/magpie-lib-local-dirs-conversion

# Do not ever "use" the LOCAL_JOB_DIR variables.  They should only be
# referenced when setting SCRATCH_DIR or CONF_DIR or LOG_DIR variables.

if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
then
    export MAGPIE_LOCAL_JOB_DIR=${MAGPIE_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
else
    export MAGPIE_LOCAL_JOB_DIR=${MAGPIE_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
fi

# MAGPIE_LOCAL_SCRATCHSPACE_DIR & MAGPIE_LOCAL_CONF_DIR set
Magpie_make_magpie_local_dirs_node_specific

magpie_slave_core_count=`cat /proc/cpuinfo | grep processor | wc -l`

if [ "${HADOOP_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export HADOOP_LOCAL_JOB_DIR=${HADOOP_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export HADOOP_LOCAL_JOB_DIR=${HADOOP_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # HADOOP_LOCAL_SCRATCHSPACE_DIR & HADOOP_CONF_DIR & HADOOP_LOG_DIR set
    # YARN_LOCAL_SCRATCHSPACE_DIR & YARN_CONF_DIR & YARN_LOG_DIR set
    Magpie_make_hadoop_local_dirs_node_specific

    # There are few duplicated exports we do b/c they are needed

    # For jobhistoryserver
    export HADOOP_MAPRED_HOME=${HADOOP_HOME}

    export HADOOP_YARN_HOME=${HADOOP_HOME}
    myusername=`whoami`
    export HADOOP_YARN_USER="${myusername}"

    # Unsure if needed, read about these online
    export HADOOP_HDFS_HOME=${HADOOP_HOME}
    export HADOOP_COMMON_HOME=${HADOOP_HOME}
    export YARN_COMMON_HOME=${HADOOP_HOME}
  
    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${HADOOP_CONF_DIR}/masters" ]
    then 
        export HADOOP_MASTER_NODE=`head -1 ${HADOOP_CONF_DIR}/masters`
        # XXX need to deal w/ fact can't use Magpie_hadoop_filesystem_mode_is_hdfs_type
        if [ "${HADOOP_FILESYSTEM_MODE}" == "hdfs" ] \
            || [ "${HADOOP_FILESYSTEM_MODE}" == "hdfsoverlustre" ] \
            || [ "${HADOOP_FILESYSTEM_MODE}" == "hdfsovernetworkfs" ]
        then
            export HADOOP_NAMENODE=`head -1 ${HADOOP_CONF_DIR}/masters`
            export HADOOP_NAMENODE_PORT="${default_hadoop_hdfs_namenode_address}"
        fi
    fi

    if [ -f "${HADOOP_CONF_DIR}/slaves" ]
    then
        export HADOOP_SLAVE_COUNT=`cat ${HADOOP_CONF_DIR}/slaves|wc -l`

        # Assume cores same on each node
        export HADOOP_SLAVE_CORE_COUNT=`expr ${magpie_slave_core_count} \* ${HADOOP_SLAVE_COUNT}`
    fi

    if [ "${HDFS_FEDERATION_NAMENODE_COUNT}X" == "X" ]
    then
        export HDFS_FEDERATION_NAMENODE_COUNT=1
    fi
fi

if [ "${PIG_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export PIG_LOCAL_JOB_DIR=${PIG_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export PIG_LOCAL_JOB_DIR=${PIG_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # PIG_LOCAL_SCRATCHSPACE_DIR & PIG_CONF_DIR set
    Magpie_make_pig_local_dirs_node_specific
fi

if [ "${MAHOUT_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export MAHOUT_LOCAL_JOB_DIR=${MAHOUT_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export MAHOUT_LOCAL_JOB_DIR=${MAHOUT_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # MAHOUT_LOCAL_SCRATCHSPACE_DIR & MAHOUT_CONF_DIR set
    Magpie_make_mahout_local_dirs_node_specific
fi

if [ "${HBASE_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export HBASE_LOCAL_JOB_DIR=${HBASE_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export HBASE_LOCAL_JOB_DIR=${HBASE_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # HBASE_LOCAL_SCRATCHSPACE_DIR & HBASE_CONF_DIR & HBASE_LOG_DIR set
    Magpie_make_hbase_local_dirs_node_specific

    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${HBASE_CONF_DIR}/masters" ]
    then 
        export HBASE_MASTER_NODE=`head -1 ${HBASE_CONF_DIR}/masters`
    fi
    
    if [ -f "${HBASE_CONF_DIR}/regionservers" ]
    then
        export HBASE_REGIONSERVER_COUNT=`cat ${HBASE_CONF_DIR}/regionservers|wc -l`
    fi
fi

if [ "${PHOENIX_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export PHOENIX_LOCAL_JOB_DIR=${PHOENIX_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export PHOENIX_LOCAL_JOB_DIR=${PHOENIX_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # PHOENIX_LOCAL_SCRATCHSPACE_DIR & PHOENIX_CONF_DIR & PHOENIX_LOG_DIR set
    Magpie_make_phoenix_local_dirs_node_specific
fi

if [ "${SPARK_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export SPARK_LOCAL_JOB_DIR=${SPARK_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export SPARK_LOCAL_JOB_DIR=${SPARK_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # SPARK_LOCAL_SCRATCHSPACE_DIR & SPARK_CONF_DIR & SPARK_LOG_DIR set
    Magpie_make_spark_local_dirs_node_specific

    # XXX need to set SPARK_MASTER_PORT
    
    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${SPARK_CONF_DIR}/masters" ]
    then 
        export SPARK_MASTER_NODE=`head -1 ${SPARK_CONF_DIR}/masters`
    fi

    if [ -f "${SPARK_CONF_DIR}/slaves" ]
    then
        export SPARK_SLAVE_COUNT=`cat ${SPARK_CONF_DIR}/slaves|wc -l`
        
        # Assume cores same on each node
        export SPARK_SLAVE_CORE_COUNT=`expr ${magpie_slave_core_count} \* ${SPARK_SLAVE_COUNT}`
    fi
fi

if [ "${KAFKA_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export KAFKA_LOCAL_JOB_DIR=${KAFKA_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export KAFKA_LOCAL_JOB_DIR=${KAFKA_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # KAFKA_LOCAL_SCRATCHSPACE_DIR & KAFKA_CONF_DIR & KAFKA_LOG_DIR set
    Magpie_make_kafka_local_dirs_node_specific

    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${KAFKA_CONF_DIR}/masters" ]
    then 
        export KAFKA_MASTER_NODE=`head -1 ${KAFKA_CONF_DIR}/masters`
    fi
    
    if [ -f "${KAFKA_CONF_DIR}/slaves" ]
    then
        export KAFKA_SLAVE_COUNT=`cat ${KAFKA_CONF_DIR}/slaves|wc -l`

        # Assume cores same on each node
        export KAFKA_SLAVE_CORE_COUNT=`expr ${magpie_slave_core_count} \* ${KAFKA_SLAVE_COUNT}`
    fi
fi

if [ "${ZEPPELIN_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export ZEPPELIN_LOCAL_JOB_DIR=${ZEPPELIN_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export ZEPPELIN_LOCAL_JOB_DIR=${ZEPPELIN_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # ZEPPELIN_LOCAL_SCRATCHSPACE_DIR & ZEPPELIN_CONF_DIR & ZEPPELIN_LOG_DIR set
    Magpie_make_zeppelin_local_dirs_node_specific

    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${ZEPPELIN_CONF_DIR}/masters" ]
    then
        export ZEPPELIN_MASTER_NODE=`head -1 ${ZEPPELIN_CONF_DIR}/masters`
    fi
fi

if [ "${STORM_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export STORM_LOCAL_JOB_DIR=${STORM_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export STORM_LOCAL_JOB_DIR=${STORM_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # STORM_LOCAL_SCRATCHSPACE_DIR & STORM_CONF_DIR & STORM_LOG_DIR set
    Magpie_make_storm_local_dirs_node_specific

    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${STORM_CONF_DIR}/masters" ]
    then 
        export STORM_MASTER_NODE=`head -1 ${STORM_CONF_DIR}/masters`
        export STORM_NIMBUS_HOST=${STORM_MASTER_NODE}
    fi
    
    if [ -f "${STORM_CONF_DIR}/workers" ]
    then
        export STORM_WORKERS_COUNT=`cat ${STORM_CONF_DIR}/workers|wc -l`
    fi
fi

if [ "${TACHYON_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export TACHYON_LOCAL_JOB_DIR=${TACHYON_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export TACHYON_LOCAL_JOB_DIR=${TACHYON_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # TACHYON_LOCAL_SCRATCHSPACE_DIR & TACHYON_CONF_DIR & TACHYON_LOG_DIR set
    Magpie_make_tachyon_local_dirs_node_specific

    # XXX need to set TACHYON_MASTER_PORT

    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${TACHYON_CONF_DIR}/masters" ]
    then 
        export TACHYON_MASTER_NODE=`head -1 ${TACHYON_CONF_DIR}/masters`
    fi
    
    if [ -f "${TACHYON_CONF_DIR}/workers" ]
    then
        export TACHYON_SLAVE_COUNT=`cat ${TACHYON_CONF_DIR}/workers|wc -l`
        export TACHYON_FIRST_WORKER_NODE=`head -1 ${TACHYON_CONF_DIR}/workers`
    fi
fi

if [ "${ZOOKEEPER_SETUP}" == "yes" ]
then
    if [ "${MAGPIE_NO_LOCAL_DIR}" == "yes" ]
    then
        export ZOOKEEPER_LOCAL_JOB_DIR=${ZOOKEEPER_LOCAL_DIR}/MAGPIEHOSTNAMESUBSTITUTION/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    else
        export ZOOKEEPER_LOCAL_JOB_DIR=${ZOOKEEPER_LOCAL_DIR}/${MAGPIE_JOB_NAME}/${MAGPIE_JOB_ID}
    fi
    # ZOOKEEPER_LOCAL_SCRATCHSPACE_DIR & ZOOKEEPER_CONF_DIR & ZOOKEEPER_LOG_DIR set
    Magpie_make_zookeeper_local_dirs_node_specific

    # Why check for file existance?  Possible magpie-setup-core didn't create it yet
    if [ -f "${ZOOKEEPER_CONF_DIR}/masters" ]
    then 
        export ZOOKEEPER_MASTER_NODE=`head -1 ${ZOOKEEPER_CONF_DIR}/masters`
    fi
fi

